
/* ******************************************************************************** */
/* ************   BASE.DB  *********************************************  */
/* ******************************************************************************** */

/* INVENTARIO DE TABLAS 

LINEARAMALTRX  -- tabla que contiene un conjunto de todas las lineas - ramales de MT

LINEASCOLE   -- tabla que contiene las lineas - ramal GEOGRAFICO



/* ********************************************************************************* */
/* ****************  ANALISIS SOBRE LINEAS DE TRANSACCIONES ************************ */
;
SELECT COUNT(*) CANTIDAD_LINEAS
FROM(
	SELECT LINEA
	FROM LINEARAMALTRX
	GROUP BY LINEA
);
--cantidad de lineas 328


SELECT COUNT(*) FROM LINEARAMALTRX
--cantidad de linea 1093

SELECT AREAGEOGRAFICA, COUNT(*) CANTIDAD_LINEAS, MIN(LINEA) MINLINEA, MAX(LINEA) MAXLINEA,SUM(CANTIDAD_RAMALES) CANTIDAD_RAMALES, AVG(CANTIDAD_RAMALES) PROMEDIO_RAMALES
FROM (
SELECT LINEA, AREAGEOGRAFICA, COUNT(*) CANTIDAD_RAMALES
FROM LINEARAMALTRX
GROUP BY LINEA, AREAGEOGRAFICA
)
GROUP BY AREAGEOGRAFICA

1	138	1	99	351	2.5434782608695654
12	120	200	464	341	2.841666666666667
13	72	003A	SUR	401	5.569444444444445


/* ********************************************************************************* */
/* ****************  ANALISIS SOBRE LINEAS DE GEOGRAFICAS ************************** */
/* ********************************************************************************* */
;;
SELECT COUNT(*)
FROM(
		SELECT LINEA, RAMAL, COUNT(SENTIDO) CANTIDAD_SENTIDOS 
		FROM lineascole 
		GROUP BY LINEA, RAMAL
		);
--CANTIDAD DE LINEAS RAMALES 1037

SELECT COUNT(*) CANTIDAD_LINEAS, SUM(CANTIDAD_RAMALES) CANTIDAD_RAMALES, AVG(CANTIDAD_RAMALES) PROMEDIO_RAMALES, SUM(CANTIDAD_SENTIDOS) CANTIDAD_TRAYECTOS,
			 SUM(CANTIDAD_IDA) CANTIDAD_TRAYECTOS_IDA, SUM(CANTIDAD_VUELTA) CANTIDAD_TRAYECTO_VUELTA,
				SUM(CANTIDAD_SENTIDOS) / SUM(CANTIDAD_RAMALES)  PROMEDIO_TRAYECTO_RAMAL
FROM
	(SELECT LINEA, COUNT(*) CANTIDAD_RAMALES, SUM(CANTIDAD_SENTIDOS) CANTIDAD_SENTIDOS, SUM(CANTIDAD_IDA) CANTIDAD_IDA, SUM(CANTIDAD_VUELTA) CANTIDAD_VUELTA
	FROM
			(
			SELECT LINEA, RAMAL, COUNT(SENTIDO) CANTIDAD_SENTIDOS, SUM(CASE WHEN SENTIDO = 'I' THEN 1 ELSE 0 END) CANTIDAD_IDA, SUM(CASE WHEN SENTIDO = 'V' THEN 1 ELSE 0 END) CANTIDAD_VUELTA
			FROM lineascole 
			GROUP BY LINEA, RAMAL
			)
	GROUP BY LINEA
	)

277	1037	3.743682310469314	2041	1029	1012	1

SELECT CANTIDAD_SENTIDOS, COUNT(*) CANTIDAD_LINEARAMAL
FROM (
SELECT LINEA, RAMAL, COUNT(SENTIDO) CANTIDAD_SENTIDOS 
FROM lineascole 
GROUP BY LINEA, RAMAL)
GROUP BY CANTIDAD_SENTIDOS 
--CANTIDAD LINEA RAMAL POR SENTIDO
1	35
2	1000
3	2


/*****************************************************************************/
/* CRUCE entre linea transacciones y lineas geo */

	SELECT COUNT(*) FROM
	(SELECT LINEA	FROM LINEARAMALTRX	GROUP BY LINEA) A,
	(SELECT LINEA FROM LINEASCOLE GROUP BY LINEA) B
	WHERE A.LINEA = B.LINEA
	
--258 LINEAS ESTÁN EN LAS DOS TABLAS 	
/******************************************************************************/


--CONTROL SI HAY LINEA RAMAL DUPLICADOS
SELECT LINEA,RAMAL
FROM  LINEARAMALTRX
GROUP BY LINEA, RAMAL
HAVING COUNT(*) > 1 
ORDER BY LINEA, RAMAL
--CERO

SELECT * FROM  LINEARAMALTRX WHERE LINEA = 1
SELECT * FROM LINEASTRXGEO WHERE LINEAMT = 1

--SQL QUE SE USO PARA ARMAR EL BOX PLOT
SELECT A.*, B.AREAGEOGRAFICA
FROM LINEASTRXGEO  A,
	   (SELECT DISTINCT LINEA, RAMAL, AREAGEOGRAFICA FROM  LINEARAMALTRX) B
WHERE A.LINEAMT = B.LINEA
  AND A.RAMALMT = B.RAMAL

--CUANTAS LINEAS RAMALES QUEDARON DESPUES DEL CRUCE??
SELECT COUNT(*) FROM LINEASTRXGEO
--737

UPDATE LINEASTRXGEO  
SET AREAGEOGRAFICA = (SELECT B.AREAGEOGRAFICA FROM  LINEARAMALTRX B WHERE LINEASTRXGEO.LINEAMT = B.LINEA  AND LINEASTRXGEO.RAMALMT = B.RAMAL )

SELECT AREAGEOGRAFICA, COUNT(*) CANTIDAD_LINEAS, MIN(LINEA) MINLINEA, MAX(LINEA) MAXLINEA,SUM(CANTIDAD_RAMALES) CANTIDAD_RAMALES, AVG(CANTIDAD_RAMALES) PROMEDIO_RAMALES, 
			SUM(RMSE)/SUM(CANTIDAD_RAMALES) RMSE_PROMEDIO, MIN(MINRMSE) MINRMSE, MAX(MAXRMSE) MAXRMSE
FROM (
SELECT LINEAMT LINEA, AREAGEOGRAFICA, COUNT(*) CANTIDAD_RAMALES, SUM(RMSE) RMSE, MIN(RMSE) MINRMSE, MAX(RMSE) MAXRMSE
FROM LINEASTRXGEO
GROUP BY LINEAMT, AREAGEOGRAFICA
)
GROUP BY AREAGEOGRAFICA

1	135	1	99	333	2.466666666666667	0.3588051460484557	0.011084136959567259	4.626317104370413
12	90	200	464	262	2.911111111111111	1.2112899587622212	0.04054793248462837	15.08116448974328
13	33	510	749	142	4.303030303030303	5.801102014869595	0.022777613975898687	47.74181337792823

SELECT AREAGEOGRAFICA, COUNT(*) CANTIDAD_LINEAS, MIN(LINEA) MINLINEA, MAX(LINEA) MAXLINEA,SUM(CANTIDAD_RAMALES) CANTIDAD_RAMALES, AVG(CANTIDAD_RAMALES) PROMEDIO_RAMALES, 
			SUM(RMSE)/SUM(CANTIDAD_RAMALES) RMSE_PROMEDIO, MIN(MINRMSE) MINRMSE, MAX(MAXRMSE) MAXRMSE
FROM (
SELECT LINEAMT LINEA, AREAGEOGRAFICA, COUNT(*) CANTIDAD_RAMALES, SUM(RMSE) RMSE, MIN(RMSE) MINRMSE, MAX(RMSE) MAXRMSE
FROM LINEASTRXGEO
WHERE RMSE <= 2.19
GROUP BY LINEAMT, AREAGEOGRAFICA
)
GROUP BY AREAGEOGRAFICA


--vamos a buscar algunas lineas que se ajustan bien y otras que se ajustan mal
;

SELECT * FROM LINEASTRXGEO WHERE AREAGEOGRAFICA = 1 ORDER BY LINEAMT, RAMALMT;









