

SELECT * FROM THE_LOTES




/*esta sentencia se utilizó en test.py para cargar 10.000 punto de uso por cada linea ramal*/
INSERT INTO THE_VIAJES 
		(CODIGOLINEA, 
		RAMAL, 
		NROTARJETAEXTERNO,  
		CODIGOTRXTARJETA, 
		FECHATRX, 
		FECHAINGRESO, 
		IDARCHIVOINTERCAMBIO)


CREATE TABLE THE_VIAJES AS
  	SELECT  /*+FULL(MT) */ 
            MT.CODIGOLINEA, 
			MT.CODIGOTRAYECTO RAMAL, 
			MT.NROTARJETAEXTERNO,  
			MT.CODIGOTRXTARJETA, 
			MT.FECHATRX, 
			MT.FECHAINGRESO, 
			MT.IDARCHIVOINTERCAMBIO,
            L.FILE_ID
	FROM EXP_MOVIMIENTOTARJETA MT,
	     THE_LOTES L	     
	WHERE FECHAINGRESO >= TO_DATE('20150501','YYYYMMDD')
        AND FECHAINGRESO < TO_DATE('20150607','YYYYMMDD')
        AND FECHATRX >= TO_DATE('20150501','YYYYMMDD')
        AND FECHATRX < TO_DATE('20150601','YYYYMMDD')
        AND MT.IDARCHIVOINTERCAMBIO = L.IDARCHIVOINTERCAMBIO
        AND L.SELECTTED = 'S'
	    AND CODIGOTIPOTRX = 19
        AND TIPOMAPPING = 5; 


--por cada viaje asigno el punto de control que le corresponde

select * from THE_VIAJES

ALTER TABLE THE_VIAJES ADD 
(C_CONTROL_POINT1 NUMBER,
 C_CONTROL_POINT2 NUMBER)

CREATE INDEX PTOCONTROL201505_IDX1 ON PTOCONTROL201505 (FILE_ID) TABLESPACE USRNSSA_IDX

UPDATE THE_VIAJES A
SET C_CONTROL_POINT2 = (SELECT MIN(C_CONTROL_POINT) FROM PTOCONTROL201505 C WHERE ESTADO = 'S' AND A.FILE_ID = C.FILE_ID AND FECHAPTO >= FECHATRX)

commit

UPDATE THE_VIAJES A
SET C_CONTROL_POINT1 = (SELECT MAX(C_CONTROL_POINT) FROM PTOCONTROL201505 C WHERE ESTADO = 'S' AND A.FILE_ID = C.FILE_ID AND FECHAPTO <= FECHATRX)

COMMIT

UPDATE THE_VIAJES
SET C_CONTROL_POINT2 = C_CONTROL_POINT1,
    C_CONTROL_POINT1 = C_CONTROL_POINT2
 
COMMIT



ALTER TABLE THE_VIAJES
ADD PORC_RECORRIDO NUMBER

ALTER TABLE THE_VIAJES
ADD SEGUNDOSAPTO NUMBER


MERGE INTO THE_VIAJES A
USING (
    SELECT A.FECHAPTO FECHAPTO1, B.NROTARJETAEXTERNO, B.CODIGOTRXTARJETA, B.FILE_ID, B.FECHATRX, C.FECHAPTO FECHAPTO2
    FROM  PTOCONTROL201505 A, THE_VIAJES B, PTOCONTROL201505 C 
    WHERE A.FILE_ID = B.FILE_ID
      AND A.C_CONTROL_POINT = B.C_CONTROL_POINT1 
      AND B.FILE_ID = C.FILE_ID
      AND B.C_CONTROL_POINT2 = C.C_CONTROL_POINT 
  ) B
ON (A.NROTARJETAEXTERNO = B.NROTARJETAEXTERNO
    AND A.CODIGOTRXTARJETA  = B.CODIGOTRXTARJETA
    AND A.FILE_ID = B.FILE_ID 
   )
WHEN MATCHED THEN UPDATE SET PORC_RECORRIDO = (FECHATRX - FECHAPTO1) / (FECHAPTO2 - FECHAPTO1)
WHERE FECHAPTO2 - FECHAPTO1 > 0;

MERGE INTO THE_VIAJES A
USING (
    SELECT A.FECHAPTO FECHAPTO1, B.NROTARJETAEXTERNO, B.CODIGOTRXTARJETA, B.FILE_ID, B.FECHATRX, C.FECHAPTO FECHAPTO2
    FROM  PTOCONTROL201505 A, THE_VIAJES B, PTOCONTROL201505 C 
    WHERE A.FILE_ID = B.FILE_ID
      AND A.C_CONTROL_POINT = B.C_CONTROL_POINT1 
      AND B.FILE_ID = C.FILE_ID
      AND B.C_CONTROL_POINT2 = C.C_CONTROL_POINT 
  ) B
ON (A.NROTARJETAEXTERNO = B.NROTARJETAEXTERNO
    AND A.CODIGOTRXTARJETA  = B.CODIGOTRXTARJETA
    AND A.FILE_ID = B.FILE_ID 
   )
WHEN MATCHED THEN UPDATE SET SEGUNDOSAPTO = CASE WHEN (FECHATRX - FECHAPTO1) <= (FECHAPTO2 - FECHATRX) THEN (FECHATRX - FECHAPTO1) * 24* 60*60 ELSE (FECHATRX - FECHAPTO2) * 24* 60 * 60 END 
;

COMMIT


COMMIT

SELECT  ROUND(PORC_RECORRIDO,2), COUNT(*) FROM THE_VIAJES  WHERE ABS(SEGUNDOSAPTO) BETWEEN 9 AND 11 GROUP BY ROUND(PORC_RECORRIDO,2) ORDER BY ROUND(PORC_RECORRIDO,2)


--consulta para python
SELECT B.NROTARJETAEXTERNO, A.LONGITUD longitudpto1, A.LATITUD latitudpto1, C.LONGITUD longitudpto2, C.LATITUD latitudpto2, B.PORC_RECORRIDO
    FROM  PTOCONTROL201505 A, THE_VIAJES B, PTOCONTROL201505 C 
    WHERE A.FILE_ID = B.FILE_ID
      AND A.C_CONTROL_POINT = B.C_CONTROL_POINT1 
      AND B.FILE_ID = C.FILE_ID
      AND B.C_CONTROL_POINT2 = C.C_CONTROL_POINT
      AND (PORC_RECORRIDO < 0.1 OR PORC_RECORRIDO > 0.9)
      AND B.CODIGOLINEA = 680
      AND B.RAMAL = 3145
    ORDER BY B.FECHATRX
    


///////////////////////////////////////////////////////////////////////////////
///////////////round 2 ///////////////////////////////////////////////////////

select count(*) from the_viajes

drop table the_viajes

CREATE TABLE THE_VIAJES AS
      SELECT  /*+FULL(MT) */ 
            MT.CODIGOLINEA, 
            MT.CODIGOTRAYECTO RAMAL, 
            MT.NROTARJETAEXTERNO,  
            MT.CODIGOTRXTARJETA, 
            MT.FECHATRX, 
            MT.FECHAINGRESO, 
            MT.IDARCHIVOINTERCAMBIO,
            L.FILE_ID,
            MT.ID_POSICIONAMIENTO
    FROM EXP_MOVIMIENTOTARJETA MT,
         THE_LOTES L         
    WHERE FECHAINGRESO >= TO_DATE('20150501','YYYYMMDD')
        AND FECHAINGRESO < TO_DATE('20150607','YYYYMMDD')
        AND FECHATRX >= TO_DATE('20150501','YYYYMMDD')
        AND FECHATRX < TO_DATE('20150601','YYYYMMDD')
        AND MT.IDARCHIVOINTERCAMBIO = L.IDARCHIVOINTERCAMBIO
        AND L.SELECTTED IS NOT NULL
        AND CODIGOTIPOTRX = 19
        AND TIPOMAPPING = 5; 
        
SELECT COUNT(*) FROM THE_VIAJES WHERE ID_POSICIONAMIENTO IS NULL
--0



ALTER TABLE THE_VIAJES ADD 
(C_CONTROL_POINT1 NUMBER,
 C_CONTROL_POINT2 NUMBER)

ALTER TABLE THE_VIAJES
ADD PORC_RECORRIDO NUMBER

ALTER TABLE THE_VIAJES
ADD SEGUNDOSAPTO NUMBER
        

COMMIT

CREATE INDEX PTOCONTROL201505b_IDX1 ON PTOCONTROL201505b (FILE_ID) TABLESPACE USRNSSA_IDX

select * from the_viajes where codigolinea = 145 

UPDATE THE_VIAJES A
SET C_CONTROL_POINT2 = (SELECT MIN(C_CONTROL_POINT) FROM PTOCONTROL201505b C WHERE ESTADO = 'S' AND A.FILE_ID = C.FILE_ID AND FECHAPTO >= FECHATRX)
where codigolinea = 145

commit;

UPDATE THE_VIAJES A
SET C_CONTROL_POINT1 = (SELECT MAX(C_CONTROL_POINT) FROM PTOCONTROL201505b C WHERE ESTADO = 'S' AND A.FILE_ID = C.FILE_ID AND FECHAPTO <= FECHATRX)
where codigolinea = 145

COMMIT;

MERGE INTO THE_VIAJES A
USING (
    SELECT A.FECHAPTO FECHAPTO1, B.NROTARJETAEXTERNO, B.CODIGOTRXTARJETA, B.FILE_ID, B.FECHATRX, C.FECHAPTO FECHAPTO2
    FROM  PTOCONTROL201505B A, THE_VIAJES B, PTOCONTROL201505B C 
    WHERE A.FILE_ID = B.FILE_ID
      AND A.C_CONTROL_POINT = B.ID_POSICIONAMIENTO 
      AND B.FILE_ID = C.FILE_ID
      AND B.ID_POSICIONAMIENTO + 1 = C.C_CONTROL_POINT
      AND B.CODIGOLINEA in (41,70,159,182,138,142,150,151,42,53,66,71,
87,
101,
119,
147,
190,
191,
265,
619,
85,
100,
106,
110,
123,
127,
130,
141,
154,
156,
170,
179,
180,
184,
257,
330,
43,
63,
103,
133,
153,
155,
165,
172,
193,
385,
35,
55,
67,
76,
79,
143,
278,
50,
57,
107,
220,
224,
310,
315
)
  ) B
ON (A.NROTARJETAEXTERNO = B.NROTARJETAEXTERNO
    AND A.CODIGOTRXTARJETA  = B.CODIGOTRXTARJETA
    AND A.FILE_ID = B.FILE_ID 
   )
WHEN MATCHED THEN UPDATE SET PORC_RECORRIDO = (FECHATRX - FECHAPTO1) / (FECHAPTO2 - FECHAPTO1)
WHERE FECHAPTO2 - FECHAPTO1 > 0;



COMMIT

MERGE INTO THE_VIAJES A
USING (
    SELECT A.FECHAPTO FECHAPTO1, B.NROTARJETAEXTERNO, B.CODIGOTRXTARJETA, B.FILE_ID, B.FECHATRX, C.FECHAPTO FECHAPTO2
    FROM  PTOCONTROL201505 A, THE_VIAJES B, PTOCONTROL201505 C 
    WHERE A.FILE_ID = B.FILE_ID
      AND A.C_CONTROL_POINT = B.ID_POSICIONAMIENTO 
      AND B.FILE_ID = C.FILE_ID
      AND B.ID_POSICIONAMIENTO + 1 = C.C_CONTROL_POINT
      AND B.CODIGOLINEA in (41,70,159,182,138,142,150,151,42,53,66,71,
87,
101,
119,
147,
190,
191,
265,
619,
85,
100,
106,
110,
123,
127,
130,
141,
154,
156,
170,
179,
180,
184,
257,
330,
43,
63,
103,
133,
153,
155,
165,
172,
193,
385,
35,
55,
67,
76,
79,
143,
278,
50,
57,
107,
220,
224,
310,
315
)
  ) B
ON (A.NROTARJETAEXTERNO = B.NROTARJETAEXTERNO
    AND A.CODIGOTRXTARJETA  = B.CODIGOTRXTARJETA
    AND A.FILE_ID = B.FILE_ID 
   )
WHEN MATCHED THEN UPDATE SET PORC_RECORRIDO = (FECHATRX - FECHAPTO1) / (FECHAPTO2 - FECHAPTO1)
WHERE FECHAPTO2 - FECHAPTO1 > 0;

COMMIT

SELECT * FROM THE_VIAJES WHERE CODIGOLINEA = 145 AND PORC_RECORRIDO IS NULL

39754450    10



/******************************************************************************************************/
/************ CREACION DE LA TABLA THE_VIAJES20150101 ************************/
/******************************************************************************************************/

CREATE TABLE THE_VIAJES20150101 AS
WITH VIAJES_EN_COLE AS 
    (
    SELECT /*+FULL(a) */ 
        NROTARJETAEXTERNO
    FROM exp_movimientotarjeta A JOIN
               LINEMT B ON CODIGOLINEA = LM_ID
               JOIN EXP_MAPEO ON TIPO_TRX     = CODIGOTIPOTRX
    AND NVL(CODIGOSUBTIPOTRX, 0) = SUBTIPO_TRX 
    WHERE fechaingreso >= TO_DATE('20150501', 'YYYYMMDD')
    and fechaingreso < TO_DATE('20150607',  'YYYYMMDD') 
    AND fechatrx >= TO_DATE('20150501', 'YYYYMMDD') + 0.125
    and fechatrx < TO_DATE('20150502', 'YYYYMMDD') + 0.125
    AND CATEGORIA='USO'
    GROUP BY NROTARJETAEXTERNO, TRUNC(FECHATRX - 0.125)
    HAVING COUNT(*) > 1
      AND  MAX(CASE WHEN LT_CODE = 'TRE' THEN 1 ELSE 0 END) = 0
      AND  MAX(CASE WHEN LT_CODE = 'SUB' THEN 1 ELSE 0 END) = 0
      AND  MAX(CASE WHEN LT_CODE = 'COL' THEN 1 ELSE 0 END) = 1
    )
  SELECT  /*+FULL(MT) FULL(L) */ 
        MT.CODIGOLINEA, 
        MT.CODIGOTRAYECTO RAMAL, 
        MT.NROTARJETAEXTERNO,  
        MT.CODIGOTRXTARJETA, 
        MT.FECHATRX, 
        MT.FECHAINGRESO, 
        MT.IDARCHIVOINTERCAMBIO,
        l.REF_EXT FILE_ID,
        MT.ID_POSICIONAMIENTO
FROM EXP_MOVIMIENTOTARJETA MT JOIN VIAJES_EN_COLE B ON MT.NROTARJETAEXTERNO = B.NROTARJETAEXTERNO
     JOIN LOTE L  ON  MT.IDARCHIVOINTERCAMBIO = L.ID_LOTE
WHERE FECHAINGRESO   >= TO_DATE('20150501','YYYYMMDD')
    AND FECHAINGRESO <  TO_DATE('20150607','YYYYMMDD')
    AND FECHATRX     >= TO_DATE('20150501','YYYYMMDD') + 0.125
    AND FECHATRX     <  TO_DATE('20150502','YYYYMMDD') +0.125
    AND CODIGOTIPOTRX = 19
         
SELECT COUNT(*) FROM THE_VIAJES20150101
--2800899


ALTER TABLE THE_VIAJES20150101
ADD PORC_RECORRIDO NUMBER

ALTER TABLE THE_VIAJES20150101
ADD (FECHAPTO1 DATE,
     FECHAPTO2 DATE)

MERGE INTO THE_VIAJES20150101 A
USING (
    SELECT  FILE_ID, C_CONTROL_POINT, DATE_TIME 
    FROM USR_POSICIONAMIENTO.TRX_POSITIONING A  
  ) B
ON (  A.FILE_ID = B.FILE_ID
      AND A.ID_POSICIONAMIENTO = B.C_CONTROL_POINT 
   )
WHEN MATCHED THEN UPDATE SET A.FECHAPTO1 = B.DATE_TIME;

COMMIT

MERGE INTO THE_VIAJES20150101 A
USING (
    SELECT  FILE_ID, C_CONTROL_POINT, DATE_TIME 
    FROM USR_POSICIONAMIENTO.TRX_POSITIONING A  
  ) B
ON (  A.FILE_ID = B.FILE_ID
      AND A.ID_POSICIONAMIENTO + 1 = B.C_CONTROL_POINT 
   )
WHEN MATCHED THEN UPDATE SET A.FECHAPTO2 = B.DATE_TIME;

commit;

--consulta que se uso en el qlickview para bajar los viajes de un dia
SELECT 
        CODIGOLINEA, 
        RAMAL, 
        NROTARJETAEXTERNO, 
        CODIGOTRXTARJETA, 
        FECHATRX, 
        FECHAINGRESO, 
        IDARCHIVOINTERCAMBIO, 
        FILE_ID, 
        ID_POSICIONAMIENTO C_CONTROL_POINT1, 
        ID_POSICIONAMIENTO + 1 C_CONTROL_POINT2, 
        REPLACE(TO_CHAR(ROUND((FECHATRX - FECHAPTO1) / (FECHAPTO2 - FECHAPTO1),2)), ',','.')  PORC_RECORRIDO,
        NULL LATITUDPTO3,
        NULL LONGITUDPTO3,
        NULL DISTANCIA
FROM THE_VIAJES20150101


SELECT COUNT(*)
       FROM USR_POSICIONAMIENTO.TRX_POSITIONING P, 
            (SELECT DISTINCT FILE_ID FROM THE_LOTES WHERE SELECTTED IS NULL) B 
      WHERE P.FILE_ID = B.FILE_ID 
        
   
/**/
 SELECT CODIGOLINEA, 
        RAMAL, 
        FILE_ID, 
         C_CONTROL_POINT,  
         LONGITUD,  
         LATITUD,   
         FECHAPTO,  
        (CASE WHEN DIFSEC > 235 AND DIFSEC < 245 THEN 'S' ELSE 'N' END) ESTADO,  
        DIFSEC, 
        SEGUNDOSPTO 
  FROM 
    (SELECT B.CODIGOLINEA,  
            B.RAMAL,  
            P.FILE_ID, 
            C_CONTROL_POINT, 
            LONGITUDE LONGITUD, 
            LATITUDE LATITUD,   
            DATE_TIME FECHAPTO, 
            (CASE WHEN LAG(P.file_id, 1) OVER (ORDER BY P.FILE_ID, P.C_CONTROL_POINT) =  P.file_id  THEN  DATE_TIME - LAG(DATE_TIME, 1) OVER (ORDER BY P.FILE_ID, P.C_CONTROL_POINT) END) * 24*60*60   DIFSEC, 
            (DATE_TIME - TO_DATE('20000101','YYYYMMDD')) * 24 * 60 * 60 SEGUNDOSPTO
       FROM USR_POSICIONAMIENTO.TRX_POSITIONING P, 
            (SELECT DISTINCT FILE_ID FROM THE_LOTES WHERE SELECTTED IS NULL) B  
      WHERE P.FILE_ID = B.FILE_ID 
     );

